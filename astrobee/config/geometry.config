-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.

require "context"
require "rotations"

-- distance from camera to AR tag
marker_height            = 0.89

-- world coordinates to overhead camera
overhead_cam_transform   = transform(vec3(-0.10, 0.05, -1.782),    quat4( 0,        0,  -0.7632,   0.6461));

-- transform from body frame to AR tag
ar_tag_transform         = transform(vec3(0.0, 0.0, 0.0),   quat4(0.7071, 0.7071, 0.0, 0.0));

-- loaded from robot.config
perch_cam_transform      = robot_geometry.perch_cam_transform;
haz_cam_transform        = robot_geometry.haz_cam_transform;
nav_cam_transform        = robot_geometry.nav_cam_transform;
dock_cam_transform       = robot_geometry.dock_cam_transform;
imu_transform            = robot_geometry.imu_transform;

-- These will maybe be robot-specific post-calibration
flashlight_front_transform = transform(vec3(0.1345, 0, .0369), quat4(0.0, 0.0, 0.0, 1.0));
flashlight_aft_transform   = transform(vec3(-0.1345, -0.054, 0.0303), quat4(0.0, 0.0, 1.0, 0.0));
laser_transform            = transform(vec3(0.1302, 0.0572, -0.1111), quat4(0.0, 0.0, 0.0, 1.0));

-- Fixed berths location in world frame for debugging
berth_left_transform  = transform(vec3(-0.492, 0.610, -0.733), quat4(0.0, 0.0, 0.0, 1.0));
berth_right_transform = transform(vec3(-0.492, 0.090, -0.733), quat4(0.0, 0.0, 0.0, 1.0));

-- The position and orientation of the dock is define world/{granite,iss}.config:
-- world_dock_transform

-- Dock specifications
-- Definitions of coordinate system is in:
-- IRG-FF002-01-Astrobee-Coordinate-Frame-Document
in2m = 0.0254
berth_separation = 20.0*in2m
berth_tilt = math.rad(25)
berth_length = 3.908*in2m
freeflyer_length = 0.290

-- The berths location are fixed relative to the dock
berth_1_position = vec3( berth_length*math.cos(berth_tilt),
                        berth_separation/2.0,
                        berth_length*math.sin(berth_tilt) )
berth_2_position = vec3( berth_length*math.cos(berth_tilt),
                        -berth_separation/2.0,
                        berth_length*math.sin(berth_tilt) )
rot_berth = rot_matrix_y(-berth_tilt)
berth_orientation = rmat2quat(rot_berth)
dock_to_berth_1_transform = transform(berth_1_position, berth_orientation)
dock_to_berth_2_transform = transform(berth_2_position, berth_orientation)
berth_to_anchor_transform = transform( vec3( freeflyer_length/2.0, 0.0, 0.0),
                                        quat4(0.0, 0.0, 0.0, 1.0) )

Zdown_rot_matrix = rot_matrix_x( math.pi )
Zup_to_Zdown = transform ( vec3(0.0, 0.0, 0.0),
                            quat4_from_rot_matrix(Zdown_rot_matrix) )
