-- Copyright (c) 2017, United States Government, as represented by the
-- Administrator of the National Aeronautics and Space Administration.
--
-- All rights reserved.
--
-- The Astrobee platform is licensed under the Apache License, Version 2.0
-- (the "License"); you may not use this file except in compliance with the
-- License. You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
-- WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
-- License for the specific language governing permissions and limitations
-- under the License.

-- Declare the variables above as reconfigurable
parameters = {
  -- SERVICE CLIENT TIMEOUT VALUES
  {
    id = "timeout_toggle_connected", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1,  max = 10, unit = "seconds",
    description = "Time by which the control enable service must be found"
  },{
    id = "timeout_plan", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Plan action timeout"
  },{
    id = "timeout_zone_connected", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which the get/set zone service must be found"
  },{
    id = "timeout_register_connected", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which the planner register service must be found"
  -- ACTION CLIENT TIMEOUT VALUES
  },{
    id = "timeout_control_connected", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which the control action must be connected to"
  },{
    id = "timeout_control_active", reconfigurable = false, type = "double",
    default = 1.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which a control goal must go active"
  },{
    id = "timeout_control_response", reconfigurable = false, type = "double",
    default = 1.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which control feedback/response must be received"
  },{
    id = "timeout_validate_connected", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which the validate action must be connected to"
  },{
    id = "timeout_validate_active", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which a validate goal must go active"
  },{
    id = "timeout_validate_response", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which validate feedback/response must be received"
  },{
    id = "timeout_validate_deadline", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which validate response must be received"
  },{
    id = "timeout_plan_connected", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which the plan action must be connected to"
  },{
    id = "timeout_plan_active", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which a plan goal must go active"
  },{
    id = "timeout_plan_response", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which plan feedback/response must be received"
  },{
    id = "timeout_plan_deadline", reconfigurable = false, type = "double",
    default = 10.0, min = 0.1, max = 10, unit = "seconds",
    description = "Time by which plan response must be received"
  -- BOOLEAN SWITCHES
  },{
    id = "enable_control", reconfigurable = true, type = "boolean",
    default = true, unit = "boolean" ,
    description = "Should control be enabled?"
  },{
    id = "enable_immediate", reconfigurable = true, type = "boolean",
    default = true, unit = "boolean",
    description = "Modify segment time stamps to execute immediately?"
  },{
    id = "enable_validation", reconfigurable = true, type = "boolean",
    default = false, unit = "boolean",
    description = "Should we validate segments before executing them"
  },{
    id = "enable_bootstrapping", reconfigurable = true, type = "boolean",
    default = true, unit = "boolean",
    description = "Should we plan motion to first setpoint?"
  },{
    id = "enable_faceforward", reconfigurable = true, type = "boolean",
    default = true, unit = "boolean",
    description = "Should planning be face-forward only?"
  },{
    id = "enable_collision_checking", reconfigurable = true, type = "boolean",
    default = true, unit = "boolean",
    description = "Should we check for collisions at run-time?"
  -- SOFT LIMITS
  },{
    id = "desired_vel", reconfigurable = true, type = "double",
    default = -1, min = -1.0, max = 1.0, unit = "m/s",
    description = "Soft planning limit on net linear velocity"
  },{
    id = "desired_accel", reconfigurable = true, type = "double",
    default = -1, min = -1.0, max = 1.0, unit = "m/s/s",
    description = "Soft planning limit on net linear acceleration"
  },{
    id = "desired_omega", reconfigurable = true, type = "double",
    default = -1, min = -1.0, max = 1.0, unit = "rad/s",
    description = "Soft planning limit on net angular velocity"
  },{
    id = "desired_alpha", reconfigurable = true, type = "double",
    default = -1, min = -1.0, max = 1.0, unit = "rad/s/s",
    description = "Soft planning limit on net angular acceleration"
  },{
    id = "desired_rate", reconfigurable = true, type = "double",
    default = 1.0, min = 1.0, max = 62.5, unit = "rad/s/s",
    description = "Desired control frequency"
  -- PLANNING ALGORITHM
  },{
    id = "planner", reconfigurable = true, type = "string",
    default = "trapezoidal", unit = "enumeration", values = {},
    description = "Which planner should be used?"
  },{
    id = "enable_replanning", reconfigurable = true, type = "boolean",
    default = false, unit = "boolean",
    description = "If an upcoming collision is detected, should we replan?"
  }
}